
            # self.p_prime[1:-1,1:-1] = (1/(c_p[1:-1,1:-1] + 1e-8)) * (
            #     c_e[1:-1,1:-1] * p_r[1:,1:-1] +
            #     c_w[1:-1,1:-1] * p_l[:-1,1:-1] + 
            #     c_n[1:-1,1:-1] * p_u[1:-1,1:] +
            #     c_s[1:-1,1:-1] * p_d[1:-1,:-1] +
            #     c_hat[1:-1,1:-1]
            # )
            # self.p_prime[1:-1,0] = (1/(c_p[1:-1,0] + 1e-8)) * (
            #     c_e[1:-1,0] * p_r[1:,0] +
            #     c_w[1:-1,0] * p_l[:-1,0] + 
            #     c_n[1:-1,0] * p_u[1:-1,0] +
            #     c_hat[1:-1,0]
            # )
            # self.p_prime[1:-1,-1] = (1/(c_p[1:-1,-1] + 1e-8)) * (
            #     c_e[1:-1,-1] * p_r[1:,-1] +
            #     c_w[1:-1,-1] * p_l[:-1,-1] + 
            #     c_s[1:-1,-1] * p_d[1:-1,-1] +
            #     c_hat[1:-1,-1]
            # )
            # self.p_prime[0,1:-1] = (1/(c_p[0,1:-1] + 1e-8)) * (
            #     c_e[0,1:-1] * p_r[0,1:-1] +
            #     c_n[0,1:-1] * p_u[0,1:] + 
            #     c_s[0,1:-1] * p_d[0,:-1] +
            #     c_hat[0,1:-1]
            # )
            # self.p_prime[-1,1:-1] = (1/(c_p[0,1:-1] + 1e-8)) * (
            #     c_w[-1,1:-1] * p_l[-1,1:-1] +
            #     c_n[-1,1:-1] * p_u[-1,1:] + 
            #     c_s[-1,1:-1] * p_d[-1,:-1] +
            #     c_hat[-1,1:-1]
            # )
            # self.p_prime[0,0] = (1/(c_p[0,0] + 1e-8)) * (
            #     c_e[0,0] * p_r[0,0] +
            #     c_n[0,0] * p_u[0,0] +
            #     c_hat[0,0]
            # )
            # self.p_prime[0,-1] = (1/(c_p[0,-1] + 1e-8)) * (
            #     c_e[0,-1] * p_r[0,-1] +
            #     c_s[0,-1] * p_d[0,-1] +
            #     c_hat[0,-1]
            # )
            # self.p_prime[-1,0] = (1/(c_p[-1,0] + 1e-8)) * (
            #     c_w[-1,0] * p_l[-1,0] +
            #     c_n[-1,0] * p_u[-1,0] +
            #     c_hat[-1,0]
            # )
            # self.p_prime[-1,-1] = (1/(c_p[-1,-1] + 1e-8)) * (
            #     c_w[-1,-1] * p_l[-1,-1] +
            #     c_s[-1,-1] * p_d[-1,-1] +
            #     c_hat[-1,-1]
            # )